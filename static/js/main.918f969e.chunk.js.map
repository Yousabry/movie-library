{"version":3,"sources":["components/SearchComponent.tsx","components/ShortlistComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Search","Input","SearchComponent","props","getColumns","shortListIds","shortList","map","movie","imdbID","title","dataIndex","key","render","text","record","size","type","disabled","includes","onClick","onSelectMovie","shape","icon","EyeOutlined","href","Poster","target","loadMore","setState","searchLoading","page","state","moviesMatchingQuery","length","reqUrl","searchVal","fetch","then","res","json","result","Response","console","error","isError","errorMsg","Error","canLoadMore","log","newMoviesMatchingQuery","parseInt","totalResults","e","onSearch","s","className","placeholder","autoFocus","allowClear","enterButton","loading","this","columns","dataSource","pagination","scroll","y","rowKey","React","Component","ShortlistComponent","numMovies","style","width","textAlign","fontSize","itemLayout","bordered","renderItem","Item","actions","DeleteOutlined","color","onRemoveMovie","Meta","Title","Year","onSubmit","App","cookies","saveShortlist","shortlist","set","JSON","stringify","path","movieSelected","indexOf","newShortlist","push","movieId","movieIndex","findIndex","splice","Cookies","get","span","alert","message","showIcon","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.918f969e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { IMovie } from \"./../App\";\r\nimport { Input, Table, Space, Button } from \"antd\";\r\n\r\nimport { EyeOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./SearchComponent.css\";\r\n\r\nconst { Search } = Input;\r\n\r\nexport class SearchComponent extends React.Component<\r\n\tISearchComponentProps,\r\n\tISearchComponentState\r\n> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmoviesMatchingQuery: [],\r\n\t\t\tisError: false,\r\n\t\t\terrorMsg: \"\",\r\n\t\t\tsearchLoading: false,\r\n\t\t\tcanLoadMore: false,\r\n\t\t\tsearchVal: \"\",\r\n\t\t};\r\n\t}\r\n\r\n\tgetColumns = (): any[] => {\r\n\t\tconst shortListIds: string[] = this.props.shortList.map(\r\n\t\t\t(movie: IMovie) => movie.imdbID\r\n\t\t);\r\n\r\n\t\treturn [\r\n\t\t\t{ title: \"Title\", dataIndex: \"Title\", key: \"Title\" },\r\n\t\t\t{ title: \"Year\", dataIndex: \"Year\", key: \"Year\" },\r\n\t\t\t{\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\tkey: \"action\",\r\n\t\t\t\trender: (text: string, record: IMovie) => (\r\n\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"link\"\r\n\t\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\t\tdisabled={shortListIds.includes(record.imdbID)}\r\n\t\t\t\t\t\t\tonClick={() => this.props.onSelectMovie(record)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAdd movie\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tshape=\"circle\"\r\n\t\t\t\t\t\t\ticon={<EyeOutlined />}\r\n\t\t\t\t\t\t\tsize={\"small\"}\r\n\t\t\t\t\t\t\thref={record.Poster}\r\n\t\t\t\t\t\t\ttarget={\"__blank\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Space>\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t];\r\n\t};\r\n\r\n\tloadMore = () => {\r\n\t\tthis.setState({ searchLoading: true });\r\n\r\n\t\tconst page: number = this.state.moviesMatchingQuery.length / 10 + 1;\r\n\r\n\t\tconst reqUrl: string = `https://www.omdbapi.com/?apikey=79fbe843&type=movie&s=${this.state.searchVal}&page=${page}`;\r\n\r\n\t\tfetch(reqUrl)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\t// for any reason, API did not return a list\r\n\t\t\t\t\tif (result.Response === \"False\") {\r\n\t\t\t\t\t\tconsole.error(result);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisError: true,\r\n\t\t\t\t\t\t\terrorMsg: result.Error ?? \"Something went wrong\",\r\n\t\t\t\t\t\t\tsearchLoading: false,\r\n\t\t\t\t\t\t\tcanLoadMore: false,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\tconst newMoviesMatchingQuery = [\r\n\t\t\t\t\t\t\t...this.state.moviesMatchingQuery,\r\n\t\t\t\t\t\t\t...result.Search,\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisError: false,\r\n\t\t\t\t\t\t\tmoviesMatchingQuery: newMoviesMatchingQuery,\r\n\t\t\t\t\t\t\tsearchLoading: false,\r\n\t\t\t\t\t\t\tcanLoadMore: parseInt(result.totalResults ?? \"0\") / 10 > page, // there are still movies we havent gotten\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(e) => {\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisError: true,\r\n\t\t\t\t\t\terrorMsg: e.Error ?? \"Something went wrong\",\r\n\t\t\t\t\t\tsearchLoading: false,\r\n\t\t\t\t\t\tcanLoadMore: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t};\r\n\r\n\tonSearch = (s: string) => {\r\n\t\tif (s === \"\") return;\r\n\r\n\t\tthis.setState({ searchLoading: true, searchVal: s });\r\n\r\n\t\tconst reqUrl: string = `https://www.omdbapi.com/?apikey=79fbe843&type=movie&s=${s}`;\r\n\r\n\t\tfetch(reqUrl)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\t// for any reason, API did not return a list\r\n\t\t\t\t\tif (result.Response === \"False\") {\r\n\t\t\t\t\t\tconsole.error(result);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisError: true,\r\n\t\t\t\t\t\t\terrorMsg: result.Error ?? \"Something went wrong\",\r\n\t\t\t\t\t\t\tsearchLoading: false,\r\n\t\t\t\t\t\t\tcanLoadMore: false,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisError: false,\r\n\t\t\t\t\t\t\tmoviesMatchingQuery: result.Search,\r\n\t\t\t\t\t\t\tsearchLoading: false,\r\n\t\t\t\t\t\t\tcanLoadMore: parseInt(result.totalResults ?? \"0\") > 10,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(e) => {\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisError: true,\r\n\t\t\t\t\t\terrorMsg: e.Error ?? \"Something went wrong\",\r\n\t\t\t\t\t\tsearchLoading: false,\r\n\t\t\t\t\t\tcanLoadMore: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"search-container\"}>\r\n\t\t\t\t<Search\r\n\t\t\t\t\tplaceholder=\"search for a movie\"\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tallowClear\r\n\t\t\t\t\tenterButton=\"Search\"\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\tloading={this.state.searchLoading}\r\n\t\t\t\t\tonSearch={this.onSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t{!this.state.isError && this.state.moviesMatchingQuery.length > 0 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\tcolumns={this.getColumns()}\r\n\t\t\t\t\t\t\tdataSource={this.state.moviesMatchingQuery}\r\n\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\tscroll={{ y: 500 }}\r\n\t\t\t\t\t\t\trowKey={(movie: IMovie) => movie.imdbID}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{this.state.canLoadMore && (\r\n\t\t\t\t\t\t\t<Button onClick={this.loadMore}>Load more</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.state.isError && <h3>{this.state.errorMsg}</h3>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport interface ISearchComponentState {\r\n\tmoviesMatchingQuery: IMovie[];\r\n\tisError: boolean;\r\n\terrorMsg: string;\r\n\tsearchLoading: boolean;\r\n\tcanLoadMore: boolean; // whether the current search has more results that can be loaded\r\n\tsearchVal: string; // current search val\r\n}\r\n\r\nexport interface ISearchComponentProps {\r\n\tshortList: IMovie[]; //list of movies in the shortlist\r\n\r\n\tonSelectMovie: (movie: IMovie) => void; // when the user selects a movie from the search results\r\n}\r\n","import React from \"react\";\r\n\r\nimport { IMovie } from \"../App\";\r\nimport { Button, List } from \"antd\";\r\n\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./ShortlistComponent.css\";\r\n\r\nexport class ShortlistComponent extends React.Component<\r\n\tIShortlistComponentProps,\r\n\tIShortlistComponentState\r\n> {\r\n\trender() {\r\n\t\tconst numMovies: number = this.props.shortList.length;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"shortlist-container\"}>\r\n\t\t\t\t<h2 style={{ width: \"100%\", textAlign: \"center\" }}>Your nominations</h2>\r\n\t\t\t\t<p style={{ width: \"100%\", textAlign: \"center\", fontSize: \"0.9em\" }}>\r\n\t\t\t\t\t(select up to 5 movies to nominate)\r\n\t\t\t\t</p>\r\n\t\t\t\t<List\r\n\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\tdataSource={this.props.shortList}\r\n\t\t\t\t\trenderItem={(movie: IMovie) => (\r\n\t\t\t\t\t\t<List.Item\r\n\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t<DeleteOutlined\r\n\t\t\t\t\t\t\t\t\tcolor={\"#eb2f96\"}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.onRemoveMovie(movie.imdbID)}\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<List.Item.Meta title={`${movie.Title} (${movie.Year})`} />\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor={\"blue\"}\r\n\t\t\t\t\tonClick={this.props.onSubmit}\r\n\t\t\t\t\tdisabled={numMovies > 5 || numMovies === 0}\r\n\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSubmit nominations\r\n\t\t\t\t</Button>\r\n\t\t\t\t{numMovies > 5 && (\r\n\t\t\t\t\t<p className={\"error-msg\"}>\r\n\t\t\t\t\t\tYou cannot select more than 5 movies to nominate\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport interface IShortlistComponentState {\r\n\t// nothing\r\n}\r\n\r\nexport interface IShortlistComponentProps {\r\n\tshortList: IMovie[]; //list of movies in the shortlist\r\n\tonRemoveMovie: (movieId: string) => void; // when the user removes a movie from the shortlist\r\n\tonSubmit: () => void; // when the user clicks the button to submit the nominations\r\n}\r\n","import React from \"react\";\nimport { Row, Col, Alert, Button } from \"antd\";\nimport Cookies from \"universal-cookie\";\nimport { SearchComponent } from \"./components/SearchComponent\";\nimport { ShortlistComponent } from \"./components/ShortlistComponent\";\n\nimport \"./App.css\";\n\nexport class App extends React.Component<IAppProps, IAppState> {\n\tpublic cookies: any;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.cookies = new Cookies();\n\n\t\tthis.state = { shortlist: this.cookies.get(\"movies-shortlist\") ?? [] };\n\t}\n\n\tsaveShortlist = (shortlist: IMovie[]) => {\n\t\t// Save in state and save in cookies, so if the user refreshes the page the info is still saved\n\t\tthis.setState({ shortlist });\n\t\tthis.cookies.set(\"movies-shortlist\", JSON.stringify(shortlist), {\n\t\t\tpath: \"/\",\n\t\t});\n\t};\n\n\tonSelectMovie = (movieSelected: IMovie) => {\n\t\tconst shortListIds: string[] = this.state.shortlist.map(\n\t\t\t(movie) => movie.imdbID\n\t\t);\n\n\t\t// If the movie is already there, do not add a duplicate\n\t\tif (shortListIds.indexOf(movieSelected.imdbID) !== -1) return;\n\n\t\t// Add the movie to the shortlist\n\t\tconst newShortlist: IMovie[] = this.state.shortlist;\n\t\tnewShortlist.push(movieSelected);\n\n\t\tthis.saveShortlist(newShortlist);\n\t};\n\n\tonRemoveMovie = (movieId: string) => {\n\t\t// Find the index of the movie we are removing\n\t\tconst movieIndex: number = this.state.shortlist.findIndex(\n\t\t\t(movie: IMovie) => movie.imdbID === movieId\n\t\t);\n\n\t\tif (movieIndex === -1) return;\n\n\t\t// Remove the movie's with the same id from the shortlist\n\t\tconst newShortlist: IMovie[] = this.state.shortlist;\n\t\tnewShortlist.splice(movieIndex, 1);\n\n\t\tthis.saveShortlist(newShortlist);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"Page-container\"}>\n\t\t\t\t<h1 className={\"Page-title\"}>Youssef's Movie Library</h1>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t<SearchComponent\n\t\t\t\t\t\t\tonSelectMovie={this.onSelectMovie}\n\t\t\t\t\t\t\tshortList={this.state.shortlist}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t<ShortlistComponent\n\t\t\t\t\t\t\tonRemoveMovie={this.onRemoveMovie}\n\t\t\t\t\t\t\tshortList={this.state.shortlist}\n\t\t\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\t\t\tthis.saveShortlist([]);\n\t\t\t\t\t\t\t\talert(\"nominations submitted!\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{this.state.shortlist.length === 5 && (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tmessage=\"You have 5 movies in your list. Ready to nominate them?\"\n\t\t\t\t\t\ttype=\"success\"\n\t\t\t\t\t\tshowIcon\n\t\t\t\t\t\taction={\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.saveShortlist([]);\n\t\t\t\t\t\t\t\t\talert(\"nominations submitted!\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNominate!\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport interface IAppState {\n\tshortlist: IMovie[];\n}\n\nexport interface IAppProps {\n\t// nothing\n}\n\nexport interface IMovie {\n\tTitle: string;\n\tYear: Date;\n\timdbID: string;\n\tType: string;\n\tPoster: string; //url to poster pic\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}